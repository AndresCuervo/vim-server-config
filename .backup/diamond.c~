#include <stdio.h>
/* Apparently I need to include the following to get the C99 standard to stop whining about isdigit?
 * Found at: http://stackoverflow.com/questions/21640838/implicit-declaration-of-functions */
#include <ctype.h>

int getdigit() {
    int c;
    // If it's not the end of a file and is a digit, return it. Not a digit? Test the next character.
    if (EOF != (c = getchar())) {
        if (isdigit(c)) {
            return c;
        } else {
            return getdigit();
        }
    } else {
        return -1;
    }
}

// Orientation: u for up, d for down.
void triangle(char orientation, int height) {
    int level = (orientation == 'u' ? 0 : (height - 2));
    while (level != (orientation == 'u' ? height : -1)) {
        int spaces = height - level;
        int stars = 1 + (level * 2);
        int leads = 31;
        // Print leading spaces to center the diamond.
        while (leads != 0) {
            printf(" ");
            leads--;
        }
        while (spaces != 0) {
            printf(" ");
            spaces--;
        }
        while (stars != 0) {
            printf("*");
            stars--;
        }
        printf("\n");
        orientation == 'u' ? level++ : level--;
    }
}

int main() {
    printf("So, I hear you want a diamond. Give me a number and I'll make a diamond twice that tall.\nEnter it here [a number between 1 & 9]: ");
    int height = getdigit() - '0';
    printf("The first number I saw was %d so I'm using that for the height!\n\n", height);

    // Print a pyramid.
    triangle('u', height);
    // Print it upside down, minus the base, to get your diamond!
    triangle('d', height);
}
